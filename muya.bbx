\ProvidesFile{muya.bbx}[2020/08/12 v0.53.0 biblatex bibliography style]
\RequireBibliographyStyle{biblatex-sp-unified}
\ExecuteBibliographyOptions{%
   datecirca=true,
   dateuncertain=true,
   autolang=hyphen
}
\DeclareLanguageMapping{british}{british-muya}

\DeclareFieldFormat[thesis]{type}{\ifbibstring{#1}{\bibstring[parens]{#1}}{\mkbibparens{#1}}}
\DeclareFieldFormat[incollection,inproceedings]{volumes}{#1}

\DeclareSourcemap{%
   \maps[datatype=bibtex]{%
      \map[overwrite,foreach={title,booktitle,note}]{%
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{”|“|„|«|»},%
               replace=\regexp{\x22}%
         ]%
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match={´},
               replace={'}%
         ]%
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{\.\.\.},%
               replace=\regexp{\\ldots\{\}}%
         ]%
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{\s+/\s+},%
               replace=\regexp{\\,\\slash\\hskip0.16667em }%
         ]%
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{\s+-\s+},%
               replace=\regexp{\x20--\x20}%          
         ]%
      }%
%      
      \map{%
         \step[fieldsource=langid,%
               match=\regexp{\Agerman\Z},%
               replace=\regexp{ngerman}]%
         \step[fieldsource=langid,%
               match=\regexp{\Aenglish\Z},%
               replace=\regexp{british}]%               
      }%
%      
      \map{%
         \step[fieldsource=langid,%
               notmatch=\regexp{\A(british|dutch|french|italian|latin|ngerman|russian|spanish)\Z},final]%
         \step[fieldset=langid,null]%
      }%
% set booktitle field to specific language if it differs from the langid     
      \map[overwrite,foreach={booktitle,title}]{%
         \step[fieldsource=keyword,%
               match=\regexp{lang-$MAPLOOP=(.+),?},final]%$
         \step[fieldset=\regexp{$MAPLOOP},fieldvalue=§§§\regexp{$1},append]%$
         % Map english to british
         \step[fieldsource=\regexp{$MAPLOOP},%$
            match=\regexp{(.+)§§§english},%
            replace=\regexp{\\foreignlanguage\{british\}\{$1\}}]%$final?
         % look for other languages        
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{(.+)§§§(.+)},%
               replace=\regexp{\\foreignlanguage\{$2\}\{$1\}}]%            
      }%
%        
      \map[overwrite]{
         \step[fieldsource=location,
               match=\regexp{\A\{(.+)\}\Z},
               replace=$1]%$
         \step[fieldsource=location,%
               match=\regexp{\s+-\s+},%
               replace=\regexp{\x20and\x20}]             
      }%
      \map[overwrite]{
         \step[fieldsource=publisher,
               match=\regexp{\A\{(.+)\}\Z},
               replace=$1]%$
         \step[fieldsource=publisher,%
               match=\regexp{\s+-\s+},%
               replace=\regexp{\x20and\x20}]
      }%
%     Use specific quotes in booktitle if language differs from main language
      \map[overwrite,foreach={title,booktitle,note}]{%
         \step[fieldsource=langid,final]%
         \step[fieldsource=keyword,%
               notmatch=\regexp{lang-$MAPLOOP=(.+),?},final]%$
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{\x22.*?\x22},final]
         \step[fieldset=\regexp{$MAPLOOP},fieldvalue=§§§,append]%$
         \step[fieldsource=langid]%
         \step[fieldset=\regexp{$MAPLOOP},origfieldval,append]%$
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{(.*?)\x22(.*?)\x22(.*)§§§(.+)},%
               replace=\regexp{$1\\foreignquote\{$4\}\{$2\}$3}]%
      }%
% Use quotation marks based on langid
      \map[overwrite,foreach={title,booktitle,note}]{%
         \step[fieldsource=langid,final]%
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{(.*?)\x22(.*?)\x22(.*)},final]%
         \step[fieldset=\regexp{$MAPLOOP},fieldvalue=§§§,append]%$
         \step[fieldsource=langid]%
         \step[fieldset=\regexp{$MAPLOOP},origfieldval,append]%$
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{(.*?)\x22(.*?)\x22(.*)§§§(.+)},%
               replace=\regexp{$1\\foreignquote\{$4\}\{$2\}$3}]%
   % we have to repeat that procedure for multiple occassions
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{(.*?)\x22(.*?)\x22(.*)},final]%
         \step[fieldset=\regexp{$MAPLOOP},fieldvalue=§§§,append]%$
         \step[fieldsource=langid]%
         \step[fieldset=\regexp{$MAPLOOP},origfieldval,append]%$
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{(.*?)\x22(.*?)\x22(.*)§§§(.+)},%
               replace=\regexp{$1\\foreignquote\{$4\}\{$2\}$3}]%     
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{(.*?)\x22(.*?)\x22(.*)},final]%
         \step[fieldset=\regexp{$MAPLOOP},fieldvalue=§§§,append]%$
         \step[fieldsource=langid]%
         \step[fieldset=\regexp{$MAPLOOP},origfieldval,append]%$
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{(.*?)\x22(.*?)\x22(.*)§§§(.+)},%
               replace=\regexp{$1\\foreignquote\{$4\}\{$2\}$3}]%                            
      }%  
%      
      \map[overwrite,foreach={title,booktitle,note}]{%
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{(.*?)\x22(.*?)\x22(.*)},%
               replace=\regexp{$1\\enquote\{$2\}$3}]%$
         % we repeat that step to get multiple quotation marks as well
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{(.*?)\x22(.*?)\x22(.*)},%
               replace=\regexp{$1\\enquote\{$2\}$3},final]%$
         \step[fieldsource=\regexp{$MAPLOOP},%$
               match=\regexp{(.*?)\x22(.*?)\x22(.*)},%
               replace=\regexp{$1\\enquote\{$2\}$3},final]%$               
      }%                        
%            
      \map{%
         \pertype{movie}%
         \step[fieldsource=director,fieldtarget=author]%
      }%
% 
      \map{%
         \step[fieldsource=note,match=\regexp{(97[8|9]-[-\d]{13})},final]%
         \step[fieldset=isbn,fieldvalue=\regexp{$1}]%$
         \step[fieldset=note,null]%
      }%
%      
      \map{%
         \step[fieldsource=note,match=\regexp{(\d[-\d]{13})},final]
         \step[fieldset=isbn,fieldvalue=\regexp{$1}]%$
         \step[fieldset=note,null]%
      }%
%
      \map{%
         \pernottype{unpublished}%
         \step[fieldset=isbn,null]%
         \step[fieldset=pagetotal,null]%
      }%
%      
      \map[overwrite=false]{%
         \pertype{thesis}%
         \step[fieldset=type,fieldvalue={Thesis}]%
      }%
%
      \map{%
         \step[fieldsource=year,fieldtarget=date]%
      }%
%
      \map{%
         \step[fieldsource=address,fieldtarget=location,final]%
      }%
%
      \map{%
         \step[fieldsource=date,match=\regexp{\Aforthcoming\Z},final]%
         \step[fieldset=pubstate,origfieldval]%
         \step[fieldset=date,null]%
         \step[fieldset=sortyear,fieldvalue=9999]%
      }%
% Split up date field
      \map[overwrite]{%
         \step[fieldsource=date,%
               match=\regexp{(.*)\s+\[(.*)\s*(\d{4}-\d{4})(.*)\]},final]%
         \step[fieldset=date,fieldvalue=\regexp{$1}]%$
         \step[fieldset=preorigdatetext,fieldvalue=\regexp{$2}]%$
         \step[fieldset=origdate,fieldvalue=\regexp{$3}]%$
         \step[fieldset=postorigdatetext,fieldvalue=\regexp{$4}]%$         
      }      
      \map[overwrite]{%
         \step[fieldsource=date,%
               match=\regexp{(.*)\s+\[(.*)\s*(\d{4})(.*)\]},final]%
         \step[fieldset=date,fieldvalue=\regexp{$1}]%$
         \step[fieldset=preorigdatetext,fieldvalue=\regexp{$2}]%$
         \step[fieldset=origdate,fieldvalue=\regexp{$3}]%$
         \step[fieldset=postorigdatetext,fieldvalue=\regexp{$4}]%$
      }
%circa dates
      \map{%
          \step[fieldsource=date,%
                match=\regexp{^c\.a\.\s+(\d{4})},%
                replace=\regexp{$1~}]%$
      }%
      \map{%
          \step[fieldsource=origdate,%
                match=\regexp{^c\.a\.\s+(\d{4})},%
                replace=\regexp{$1~}]%$
      }%
% Uncertain dates      
      \map{%
          \step[fieldsource=date,%
                match=\regexp{(.*)\s+\?+},%
                replace=\regexp{$1?}]%$
      }%
      \map{%
          \step[fieldsource=origdate,%
                match=\regexp{(.*)\s+\?+},%
                replace=\regexp{$1?}]%$
      }%      
%date ranges
      \map{%
         \step[fieldsource=date,%
               match=\regexp{(\d{4})-(\d{4})},%
               replace=\regexp{$1/$2}]%
      }%
      \map{%
         \step[fieldsource=origdate,%
               match=\regexp{(\d{4})-(\d{4})},%
               replace=\regexp{$1/$2}]%
      }%
%
      \map[overwrite]{%
         \step[fieldsource=title,match=\regexp{(.*)\s+:\s+(.*)},final]%
         \step[fieldset=title,fieldvalue=\regexp{$1}]%$
         \step[fieldset=subtitle,fieldvalue=\regexp{$2}]%$
      }%  
%
      \map[overwrite]{%
         \step[fieldsource=edition,
               match=\regexp{(\d+)[a-z]{2}\s+.*},
               replace=\regexp{$1}]%$
      }%
      \map{%
         \pertype{misc}%
         \step[fieldsource=publisher,fieldtarget=organization]%
      }%
      %%\map[foreach={title,booktitle,note}]{%
      %%   
      %%\step[fieldsource=langid,match=\regexp{(ngerman|french|italian)},final]%
      %%   \step[fieldsource=\regexp{$MAPLOOP},%$
      %%        match=\regexp{\x22(.*?)\x22},%
%      
      \map{%
         \step[fieldsource=pages,%
               match=\regexp{ff\.},%
               replace=\regexp{\\psqq}]
         \step[fieldsource=pages,%
               match=\regexp{f\.},%
               replace=\regexp{\\psq}]                  
      }%
      % We search for names with prefixes and apapt the sorting order
      \map[overwrite=true]{%
         \step[fieldsource=translator]
         \step[fieldset=tempsortname, origfieldval]
         \step[fieldsource=editor]
         \step[fieldset=tempsortname, origfieldval]
         \step[fieldsource=author]
         \step[fieldset=tempsortname, origfieldval]
      }%
      \map[overwrite=true]{%
         \step[fieldsource=tempsortname,%
               match=\regexp{(.+),\s+prefix=.+,\s+useprefix=true(.*)},%
               replace={$1$2}]%
      }%
      \map[overwrite=false]{%
         \step[fieldsource=tempsortname]
         \step[fieldset=sortname,origfieldval]
      }%
   }%
}%

\renewcommand{\bibfont}{\normalfont\small}%

%%% Automatic Sentence case for _no_ language at all
\DeclareCaseLangs{}

\DeclareBibliographyDriver{inproceedings}{%
   \usebibmacro{bibindex}%
   \usebibmacro{begentry}%
   \iffieldundef{issn}
      {\usebibmacro{author/translator+others}%
      \setunit{\labelnamepunct}\newblock
      \usebibmacro{title}%
      \newunit
      \printlist{language}%
      \newunit\newblock
      \usebibmacro{byauthor}%
      \newunit\newblock
      \usebibmacro{in:}%
      \ifnameundef{editor}
         {\setunit{\addspace}}
         {\usebibmacro{byeditor+others}\setunit{\addcomma\space}}
      \usebibmacro{maintitle+booktitle}%
      \setunit{\addcomma\space}
      \printfield{edition}%
      \setunit{\addcomma\space}
      \iffieldundef{maintitle}
         {%
            \printfield{volume}%
            \printfield{part}%
         \iffieldundef{volumes}%
            {}%
            {\addspace\bibstring{ofseries}\space%
            \printfield{volumes}}%
         }%
         {}%
      %\setunit{\addcomma\space}
%      \printfield{volumes}%
      \setunit{\addspace}%
      \usebibmacro{series+number}%
      \setunit{\addcomma\space}
      \usebibmacro{chapter+pages}%
      \newunit\newblock
      \printfield{note}%
      \newunit\newblock
      \usebibmacro{publisher+location+date}%
      \newunit\newblock
      \iftoggle{bbx:isbn}
         {\printfield{isbn}}
         {}%
      \newunit\newblock
      \usebibmacro{doi+eprint+url}%
      \newunit\newblock
      \usebibmacro{addendum+pubstate}%
      \setunit{\bibpagerefpunct}\newblock
      \usebibmacro{pageref}%
      \newunit\newblock
      \iftoggle{bbx:related}
         {\usebibmacro{related:init}%
         \usebibmacro{related}}
         {}}
   {\usebibmacro{author/translator+others}%
   \setunit{\labelnamepunct}\newblock
   \usebibmacro{title}%
   \newunit
   \printlist{language}%
   \newunit\newblock
   \usebibmacro{byauthor}%
   \newunit\newblock
   \usebibmacro{bytranslator+others}%
   \newunit\newblock
   \printfield{version}%
   \newunit\newblock
   \usebibmacro{unified:proc-as-article:maintitle+booktitle}%
   \usebibmacro{unified:proc-as-article:volume+number+eid}
   \newunit\newblock%                           \newblock ensures period before pages
   \usebibmacro{note+pages}%
   \newunit\newblock
   \iftoggle{bbx:isbn}
      {\printfield{issn}}
      {}%
   \newunit\newblock
   \usebibmacro{doi+eprint+url}%
   \newunit\newblock
   \usebibmacro{addendum+pubstate}%
   \setunit{\bibpagerefpunct}\newblock
   \usebibmacro{pageref}%
   \newunit\newblock
   \iftoggle{bbx:related}
      {\usebibmacro{related:init}%
      \usebibmacro{related}}
      {}}
   \usebibmacro{finentry}}

\DeclareBibliographyDriver{unpublished}{%
  \usebibmacro{bibindex}%
  \usebibmacro{begentry}%
  \usebibmacro{author}%
  \setunit{\labelnamepunct}\newblock
  \usebibmacro{title}%
  \newunit
  \printlist{language}%
  \newunit\newblock
  \usebibmacro{byauthor}%
  \newunit\newblock
  \printfield{howpublished}%
  \newunit\newblock
  % Inserted
  \printfield{type}%
  \newunit\newblock
  \usebibmacro{event+venue+date}%
  \newunit\newblock
  % end
  \printfield{note}%
  \newunit\newblock
  \usebibmacro{location+date}%
  \newunit\newblock
  \printfield{pagetotal}%
  \newunit\newblock
  % Inserted to print the ISBN number
  \printfield{isbn}%
  \newunit\newblock
  % end  
  \iftoggle{bbx:url}
    {\usebibmacro{url+urldate}}
    {}%
  \newunit\newblock
  \usebibmacro{addendum+pubstate}%
  \setunit{\bibpagerefpunct}\newblock
  \usebibmacro{pageref}%
  \newunit\newblock
  \iftoggle{bbx:related}
    {\usebibmacro{related:init}%
     \usebibmacro{related}}
    {}%
  \usebibmacro{finentry}}

\DeclareNameAlias{director}{sortname}
  
\DeclareBibliographyDriver{movie}{%
  \usebibmacro{bibindex}%
  \usebibmacro{begentry}%
  \usebibmacro{author}%
  \setunit{\labelnamepunct}\newblock
  \usebibmacro{title}%
  \newunit
  \printlist{language}%
  \newunit\newblock
  \usebibmacro{location+date}%
  \newunit\newblock
  \iftoggle{bbx:url}
    {\usebibmacro{url+urldate}}
    {}%
  \newunit\newblock
  \usebibmacro{addendum+pubstate}%
  \setunit{\bibpagerefpunct}\newblock
  \usebibmacro{finentry}}  

\renewbibmacro*{author}{%
  \ifboolexpr{
    test \ifuseauthor
    and
    not test {\ifnameundef{author}}
  }
    {\usebibmacro{bbx:dashcheck}
       {\bibnamedash}
       {\usebibmacro{bbx:savehash}%
        \printnames{author}%
  \iffieldundef{authortype}
    {\newunit}%                               period instead of space
    {\setunit{\addcomma\space}}}%
     \iffieldundef{authortype}
       {}
       {\usebibmacro{authorstrg}%
  \newunit}}%                                 period instead of space
    {\global\undef\bbx@lasthash
     \usebibmacro{labeltitle}%
     \newunit}%                               period instead of space
  \usebibmacro{date+extradate}%
  \iffieldundef{origyear}%
   {}%
   {\addspace%
    \printtext[brackets]{%
      \printfield{preorigdatetext}%
      \setunit*{\addspace}%
      \printorigdate%
      \setunit{\addspace}%
      \printfield{postorigdatetext}}%
   }%
}%

\renewbibmacro*{byeditor+others}{%
   \ifnameundef{editor}
      {\setunit{\addcomma\space}}%
      {\printnames[byeditor]{editor}%
      \setunit{\addspace}%
      \printtext[parens]{\usebibmacro{editor+othersstrg}}%  putting (ed.) or (eds.) after editors of books
      \clearname{editor}%
      \setunit{\addcomma\space}}%was: \newunit
   \usebibmacro{byeditorx}%
   \usebibmacro{bytranslator+others}}

\renewbibmacro*{byeditorx}{%
   \ifnameundef{editora}
      {}
      {\usebibmacro{bytypestrg}{editora}{editor}%
      \setunit{\addspace}%
      \printnames[byeditora]{editora}%
      \setunit{\addcomma\space}}%was: \newunit
   \ifnameundef{editorb}
      {}
      {\usebibmacro{bytypestrg}{editorb}{editor}%
      \setunit{\addspace}%
      \printnames[byeditorb]{editorb}%
      \setunit{\addcomma\space}}%was: \newunit
   \ifnameundef{editorc}
      {}
      {\usebibmacro{bytypestrg}{editorc}{editor}%
      \setunit{\addspace}%
      \printnames[byeditorc]{editorc}%
      \setunit{\addcomma\space}}%was: \newunit
}

\renewbibmacro*{bytranslator+others}{%
   \ifnameundef{translator}
      {}
      {\usebibmacro{bytranslator+othersstrg}%
      \setunit{\addspace}%
      \printnames[bytranslator]{translator}%
      \clearname{translator}%
      \setunit{\addcomma\space}}%was: \newunit
   \usebibmacro{withothers}}

\renewbibmacro*{date+extradate}{%
    \iffieldundef{pubstate}
      {%
         \iffieldundef{labelyear}
            {}%
            {\printtext{%
               \iflabeldateisdate
                  {\printdateextra}
                  {\printlabeldateextra}%
               %\iffieldundef{origdate}%
               %   {}%
               %   {\addnbspace\printorigdate}%
            }%
            }%
      }%
      {\printlabeldateextra}%
}%

\renewbibmacro*{addendum+pubstate}{%
  \printfield{addendum}}%
  
\renewbibmacro*{series+number}{%
   \iffieldundef{series}
   {}
   {\ifboolexpr{ test {\ifentrytype{inreference}} and
                 test {\iffieldnum{series}} }%
      {%
         \printtext[parens]{%
            \bibcpsstring{volume}\addnbspace\printfield{series}%
            \setunit*{\adddot}%
            \printfield{number}% 
         }%
      }%
      {%
         \printtext[parens]{%
            \printfield{series}%
            \setunit*{\addnbspace}%
            \printfield{number}%
         }%
      }%
    }%
}  

\renewbibmacro*{publisher+location+date}{%
   \iffieldequalstr{langid}{french}{\NoAutoSpacing}{}%
   \printlist{location}%
   \iflistundef{publisher}
      {\setunit*{\addcomma\space}}
      {\setunit*{\addcolon\space}}%
   \printlist{publisher}%
   \setunit*{\addcomma\space}%
   \usebibmacro{date}%
\newunit}

\DeclareLabeldate{%
   \field{date}
   \field{year}
   \field{eventdate}
   \field{origdate}
   \field{urldate}
   \field{pubstate}
   \literal{nodate}
}
\endinput
